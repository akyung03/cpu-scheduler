{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack:///[turbopack]/browser/dev/hmr-client/hmr-client.ts"],"sourcesContent":["/// <reference path=\"../../../shared/runtime-types.d.ts\" />\n/// <reference path=\"../../runtime/base/dev-globals.d.ts\" />\n/// <reference path=\"../../runtime/base/dev-protocol.d.ts\" />\n/// <reference path=\"../../runtime/base/dev-extensions.ts\" />\n\ntype SendMessage = (msg: any) => void;\nexport type WebSocketMessage =\n  | {\n      type: \"turbopack-connected\";\n    }\n  | {\n      type: \"turbopack-message\";\n      data: Record<string, any>;\n    };\n\n\nexport type ClientOptions = {\n  addMessageListener: (cb: (msg: WebSocketMessage) => void) => void;\n  sendMessage: SendMessage;\n  onUpdateError: (err: unknown) => void;\n};\n\nexport function connect({\n  addMessageListener,\n  sendMessage,\n  onUpdateError = console.error,\n}: ClientOptions) {\n  addMessageListener((msg) => {\n    switch (msg.type) {\n      case \"turbopack-connected\":\n        handleSocketConnected(sendMessage);\n        break;\n      default:\n        try {\n          if (Array.isArray(msg.data)) {\n            for (let i = 0; i < msg.data.length; i++) {\n              handleSocketMessage(msg.data[i] as ServerMessage);\n            }\n          } else {\n            handleSocketMessage(msg.data as ServerMessage);\n          }\n          applyAggregatedUpdates();\n        } catch (e: unknown) {\n          console.warn(\n            \"[Fast Refresh] performing full reload\\n\\n\" +\n              \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\n              \"You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n\" +\n              \"Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n\" +\n              \"It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n\" +\n              \"Fast Refresh requires at least one parent function component in your React tree.\"\n          );\n          onUpdateError(e);\n          location.reload();\n        }\n        break;\n    }\n  });\n\n  const queued = globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS;\n  if (queued != null && !Array.isArray(queued)) {\n    throw new Error(\"A separate HMR handler was already registered\");\n  }\n  globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS = {\n    push: ([chunkPath, callback]: [ChunkPath, UpdateCallback]) => {\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\n    },\n  };\n\n  if (Array.isArray(queued)) {\n    for (const [chunkPath, callback] of queued) {\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\n    }\n  }\n}\n\ntype UpdateCallbackSet = {\n  callbacks: Set<UpdateCallback>;\n  unsubscribe: () => void;\n};\n\nconst updateCallbackSets: Map<ResourceKey, UpdateCallbackSet> = new Map();\n\nfunction sendJSON(sendMessage: SendMessage, message: ClientMessage) {\n  sendMessage(JSON.stringify(message));\n}\n\ntype ResourceKey = string;\n\nfunction resourceKey(resource: ResourceIdentifier): ResourceKey {\n  return JSON.stringify({\n    path: resource.path,\n    headers: resource.headers || null,\n  });\n}\n\nfunction subscribeToUpdates(\n  sendMessage: SendMessage,\n  resource: ResourceIdentifier\n): () => void {\n  sendJSON(sendMessage, {\n    type: \"turbopack-subscribe\",\n    ...resource,\n  });\n\n  return () => {\n    sendJSON(sendMessage, {\n      type: \"turbopack-unsubscribe\",\n      ...resource,\n    });\n  };\n}\n\nfunction handleSocketConnected(sendMessage: SendMessage) {\n  for (const key of updateCallbackSets.keys()) {\n    subscribeToUpdates(sendMessage, JSON.parse(key));\n  }\n}\n\n// we aggregate all pending updates until the issues are resolved\nconst chunkListsWithPendingUpdates: Map<ResourceKey, PartialServerMessage> =\n  new Map();\n\nfunction aggregateUpdates(msg: PartialServerMessage) {\n  const key = resourceKey(msg.resource);\n  let aggregated = chunkListsWithPendingUpdates.get(key);\n\n  if (aggregated) {\n    aggregated.instruction = mergeChunkListUpdates(\n      aggregated.instruction,\n      msg.instruction\n    );\n  } else {\n    chunkListsWithPendingUpdates.set(key, msg);\n  }\n}\n\nfunction applyAggregatedUpdates() {\n  if (chunkListsWithPendingUpdates.size === 0) return;\n  hooks.beforeRefresh();\n  for (const msg of chunkListsWithPendingUpdates.values()) {\n    triggerUpdate(msg);\n  }\n  chunkListsWithPendingUpdates.clear();\n  finalizeUpdate();\n}\n\nfunction mergeChunkListUpdates(\n  updateA: ChunkListUpdate,\n  updateB: ChunkListUpdate\n): ChunkListUpdate {\n  let chunks;\n  if (updateA.chunks != null) {\n    if (updateB.chunks == null) {\n      chunks = updateA.chunks;\n    } else {\n      chunks = mergeChunkListChunks(updateA.chunks, updateB.chunks);\n    }\n  } else if (updateB.chunks != null) {\n    chunks = updateB.chunks;\n  }\n\n  let merged;\n  if (updateA.merged != null) {\n    if (updateB.merged == null) {\n      merged = updateA.merged;\n    } else {\n      // Since `merged` is an array of updates, we need to merge them all into\n      // one, consistent update.\n      // Since there can only be `EcmascriptMergeUpdates` in the array, there is\n      // no need to key on the `type` field.\n      let update = updateA.merged[0];\n      for (let i = 1; i < updateA.merged.length; i++) {\n        update = mergeChunkListEcmascriptMergedUpdates(\n          update,\n          updateA.merged[i]\n        );\n      }\n\n      for (let i = 0; i < updateB.merged.length; i++) {\n        update = mergeChunkListEcmascriptMergedUpdates(\n          update,\n          updateB.merged[i]\n        );\n      }\n\n      merged = [update];\n    }\n  } else if (updateB.merged != null) {\n    merged = updateB.merged;\n  }\n\n  return {\n    type: \"ChunkListUpdate\",\n    chunks,\n    merged,\n  };\n}\n\nfunction mergeChunkListChunks(\n  chunksA: Record<ChunkPath, ChunkUpdate>,\n  chunksB: Record<ChunkPath, ChunkUpdate>\n): Record<ChunkPath, ChunkUpdate> {\n  const chunks: Record<ChunkPath, ChunkUpdate> = {};\n\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA)) {\n    const chunkUpdateB = chunksB[chunkPath];\n    if (chunkUpdateB != null) {\n      const mergedUpdate = mergeChunkUpdates(chunkUpdateA, chunkUpdateB);\n      if (mergedUpdate != null) {\n        chunks[chunkPath] = mergedUpdate;\n      }\n    } else {\n      chunks[chunkPath] = chunkUpdateA;\n    }\n  }\n\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB)) {\n    if (chunks[chunkPath] == null) {\n      chunks[chunkPath] = chunkUpdateB;\n    }\n  }\n\n  return chunks;\n}\n\nfunction mergeChunkUpdates(\n  updateA: ChunkUpdate,\n  updateB: ChunkUpdate\n): ChunkUpdate | undefined {\n  if (\n    (updateA.type === \"added\" && updateB.type === \"deleted\") ||\n    (updateA.type === \"deleted\" && updateB.type === \"added\")\n  ) {\n    return undefined;\n  }\n\n  if (updateA.type === \"partial\") {\n    invariant(updateA.instruction, \"Partial updates are unsupported\");\n  }\n\n  if (updateB.type === \"partial\") {\n    invariant(updateB.instruction, \"Partial updates are unsupported\");\n  }\n\n  return undefined;\n}\n\nfunction mergeChunkListEcmascriptMergedUpdates(\n  mergedA: EcmascriptMergedUpdate,\n  mergedB: EcmascriptMergedUpdate\n): EcmascriptMergedUpdate {\n  const entries = mergeEcmascriptChunkEntries(mergedA.entries, mergedB.entries);\n  const chunks = mergeEcmascriptChunksUpdates(mergedA.chunks, mergedB.chunks);\n\n  return {\n    type: \"EcmascriptMergedUpdate\",\n    entries,\n    chunks,\n  };\n}\n\nfunction mergeEcmascriptChunkEntries(\n  entriesA: Record<ModuleId, EcmascriptModuleEntry> | undefined,\n  entriesB: Record<ModuleId, EcmascriptModuleEntry> | undefined\n): Record<ModuleId, EcmascriptModuleEntry> {\n  return { ...entriesA, ...entriesB };\n}\n\nfunction mergeEcmascriptChunksUpdates(\n  chunksA: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined,\n  chunksB: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined\n): Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined {\n  if (chunksA == null) {\n    return chunksB;\n  }\n\n  if (chunksB == null) {\n    return chunksA;\n  }\n\n  const chunks: Record<ChunkPath, EcmascriptMergedChunkUpdate> = {};\n\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA)) {\n    const chunkUpdateB = chunksB[chunkPath];\n    if (chunkUpdateB != null) {\n      const mergedUpdate = mergeEcmascriptChunkUpdates(\n        chunkUpdateA,\n        chunkUpdateB\n      );\n      if (mergedUpdate != null) {\n        chunks[chunkPath] = mergedUpdate;\n      }\n    } else {\n      chunks[chunkPath] = chunkUpdateA;\n    }\n  }\n\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB)) {\n    if (chunks[chunkPath] == null) {\n      chunks[chunkPath] = chunkUpdateB;\n    }\n  }\n\n  if (Object.keys(chunks).length === 0) {\n    return undefined;\n  }\n\n  return chunks;\n}\n\nfunction mergeEcmascriptChunkUpdates(\n  updateA: EcmascriptMergedChunkUpdate,\n  updateB: EcmascriptMergedChunkUpdate\n): EcmascriptMergedChunkUpdate | undefined {\n  if (updateA.type === \"added\" && updateB.type === \"deleted\") {\n    // These two completely cancel each other out.\n    return undefined;\n  }\n\n  if (updateA.type === \"deleted\" && updateB.type === \"added\") {\n    const added = [];\n    const deleted = [];\n    const deletedModules = new Set(updateA.modules ?? []);\n    const addedModules = new Set(updateB.modules ?? []);\n\n    for (const moduleId of addedModules) {\n      if (!deletedModules.has(moduleId)) {\n        added.push(moduleId);\n      }\n    }\n\n    for (const moduleId of deletedModules) {\n      if (!addedModules.has(moduleId)) {\n        deleted.push(moduleId);\n      }\n    }\n\n    if (added.length === 0 && deleted.length === 0) {\n      return undefined;\n    }\n\n    return {\n      type: \"partial\",\n      added,\n      deleted,\n    };\n  }\n\n  if (updateA.type === \"partial\" && updateB.type === \"partial\") {\n    const added = new Set([...(updateA.added ?? []), ...(updateB.added ?? [])]);\n    const deleted = new Set([\n      ...(updateA.deleted ?? []),\n      ...(updateB.deleted ?? []),\n    ]);\n\n    if (updateB.added != null) {\n      for (const moduleId of updateB.added) {\n        deleted.delete(moduleId);\n      }\n    }\n\n    if (updateB.deleted != null) {\n      for (const moduleId of updateB.deleted) {\n        added.delete(moduleId);\n      }\n    }\n\n    return {\n      type: \"partial\",\n      added: [...added],\n      deleted: [...deleted],\n    };\n  }\n\n  if (updateA.type === \"added\" && updateB.type === \"partial\") {\n    const modules = new Set([\n      ...(updateA.modules ?? []),\n      ...(updateB.added ?? []),\n    ]);\n\n    for (const moduleId of updateB.deleted ?? []) {\n      modules.delete(moduleId);\n    }\n\n    return {\n      type: \"added\",\n      modules: [...modules],\n    };\n  }\n\n  if (updateA.type === \"partial\" && updateB.type === \"deleted\") {\n    // We could eagerly return `updateB` here, but this would potentially be\n    // incorrect if `updateA` has added modules.\n\n    const modules = new Set(updateB.modules ?? []);\n\n    if (updateA.added != null) {\n      for (const moduleId of updateA.added) {\n        modules.delete(moduleId);\n      }\n    }\n\n    return {\n      type: \"deleted\",\n      modules: [...modules],\n    };\n  }\n\n  // Any other update combination is invalid.\n\n  return undefined;\n}\n\nfunction invariant(_: never, message: string): never {\n  throw new Error(`Invariant: ${message}`);\n}\n\nconst CRITICAL = [\"bug\", \"error\", \"fatal\"];\n\nfunction compareByList(list: any[], a: any, b: any) {\n  const aI = list.indexOf(a) + 1 || list.length;\n  const bI = list.indexOf(b) + 1 || list.length;\n  return aI - bI;\n}\n\nconst chunksWithIssues: Map<ResourceKey, Issue[]> = new Map();\n\nfunction emitIssues() {\n  const issues = [];\n  const deduplicationSet = new Set();\n\n  for (const [_, chunkIssues] of chunksWithIssues) {\n    for (const chunkIssue of chunkIssues) {\n      if (deduplicationSet.has(chunkIssue.formatted)) continue;\n\n      issues.push(chunkIssue);\n      deduplicationSet.add(chunkIssue.formatted);\n    }\n  }\n\n  sortIssues(issues);\n\n  hooks.issues(issues);\n}\n\nfunction handleIssues(msg: ServerMessage): boolean {\n  const key = resourceKey(msg.resource);\n  let hasCriticalIssues = false;\n\n  for (const issue of msg.issues) {\n    if (CRITICAL.includes(issue.severity)) {\n      hasCriticalIssues = true;\n    }\n  }\n\n  if (msg.issues.length > 0) {\n    chunksWithIssues.set(key, msg.issues);\n  } else if (chunksWithIssues.has(key)) {\n    chunksWithIssues.delete(key);\n  }\n\n  emitIssues();\n\n  return hasCriticalIssues;\n}\n\nconst SEVERITY_ORDER = [\"bug\", \"fatal\", \"error\", \"warning\", \"info\", \"log\"];\nconst CATEGORY_ORDER = [\n  \"parse\",\n  \"resolve\",\n  \"code generation\",\n  \"rendering\",\n  \"typescript\",\n  \"other\",\n];\n\nfunction sortIssues(issues: Issue[]) {\n  issues.sort((a, b) => {\n    const first = compareByList(SEVERITY_ORDER, a.severity, b.severity);\n    if (first !== 0) return first;\n    return compareByList(CATEGORY_ORDER, a.category, b.category);\n  });\n}\n\nconst hooks = {\n  beforeRefresh: () => {},\n  refresh: () => {},\n  buildOk: () => {},\n  issues: (_issues: Issue[]) => {},\n};\n\nexport function setHooks(newHooks: typeof hooks) {\n  Object.assign(hooks, newHooks);\n}\n\nfunction handleSocketMessage(msg: ServerMessage) {\n  sortIssues(msg.issues);\n\n  handleIssues(msg);\n\n  switch (msg.type) {\n    case \"issues\":\n      // issues are already handled\n      break;\n    case \"partial\":\n      // aggregate updates\n      aggregateUpdates(msg);\n      break;\n    default:\n      // run single update\n      const runHooks = chunkListsWithPendingUpdates.size === 0;\n      if (runHooks) hooks.beforeRefresh();\n      triggerUpdate(msg);\n      if (runHooks) finalizeUpdate();\n      break;\n  }\n}\n\nfunction finalizeUpdate() {\n  hooks.refresh();\n  hooks.buildOk();\n\n  // This is used by the Next.js integration test suite to notify it when HMR\n  // updates have been completed.\n  // TODO: Only run this in test environments (gate by `process.env.__NEXT_TEST_MODE`)\n  if (globalThis.__NEXT_HMR_CB) {\n    globalThis.__NEXT_HMR_CB();\n    globalThis.__NEXT_HMR_CB = null;\n  }\n}\n\nfunction subscribeToChunkUpdate(\n  chunkPath: ChunkPath,\n  sendMessage: SendMessage,\n  callback: UpdateCallback\n): () => void {\n  return subscribeToUpdate(\n    {\n      path: chunkPath,\n    },\n    sendMessage,\n    callback\n  );\n}\n\nexport function subscribeToUpdate(\n  resource: ResourceIdentifier,\n  sendMessage: SendMessage,\n  callback: UpdateCallback\n) {\n  const key = resourceKey(resource);\n  let callbackSet: UpdateCallbackSet;\n  const existingCallbackSet = updateCallbackSets.get(key);\n  if (!existingCallbackSet) {\n    callbackSet = {\n      callbacks: new Set([callback]),\n      unsubscribe: subscribeToUpdates(sendMessage, resource),\n    };\n    updateCallbackSets.set(key, callbackSet);\n  } else {\n    existingCallbackSet.callbacks.add(callback);\n    callbackSet = existingCallbackSet;\n  }\n\n  return () => {\n    callbackSet.callbacks.delete(callback);\n\n    if (callbackSet.callbacks.size === 0) {\n      callbackSet.unsubscribe();\n      updateCallbackSets.delete(key);\n    }\n  };\n}\n\nfunction triggerUpdate(msg: ServerMessage) {\n  const key = resourceKey(msg.resource);\n  const callbackSet = updateCallbackSets.get(key);\n  if (!callbackSet) {\n    return;\n  }\n\n  for (const callback of callbackSet.callbacks) {\n    callback(msg);\n  }\n\n  if (msg.type === \"notFound\") {\n    // This indicates that the resource which we subscribed to either does not exist or\n    // has been deleted. In either case, we should clear all update callbacks, so if a\n    // new subscription is created for the same resource, it will send a new \"subscribe\"\n    // message to the server.\n    // No need to send an \"unsubscribe\" message to the server, it will have already\n    // dropped the update stream before sending the \"notFound\" message.\n    updateCallbackSets.delete(key);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":["file:///Users/austincho/cpu-scheduler/algorithms/fifo.js"],"sourcesContent":["// algorithms/fifo.js\n\nexport function fifo(processes) {\n    let time = 0; // Initialize the current time \n    let totalWaitTime = 0; // Initialize the total wait \n    let totalTurnAroundTime = 0; // Initialize the total turnaround\n  \n    \n    const result = [];\n  \n   \n    for (let i = 0; i < processes.length; i++) {\n      const process = processes[i]; \n  \n      const waitTime = time; \n      const turnAroundTime = time + process.burstTime; // Turnaround time is wait time + burst time\n  \n  \n      totalWaitTime += waitTime;\n      totalTurnAroundTime += turnAroundTime;\n  \n      // Update the current time by adding the burst time of the current process\n      time += process.burstTime;\n  \n      // Add the process details to the result array\n      result.push({\n        ...process, \n        waitTime: waitTime, \n        turnAroundTime: turnAroundTime \n      });\n    }\n  \n    // Calculate the average wait time and average turnaround time\n    const avgWaitTime = totalWaitTime / processes.length;\n    const avgTurnAroundTime = totalTurnAroundTime / processes.length;\n  \n    // Return the results including the detailed process info and averages\n    return {\n      result, \n      avgWaitTime, \n      avgTurnAroundTime \n    };\n  }"],"names":[],"mappings":"AAAA,qBAAqB;;;;AAEd,SAAS,KAAK,SAAS;IAC1B,IAAI,OAAO,GAAG,+BAA+B;IAC7C,IAAI,gBAAgB,GAAG,6BAA6B;IACpD,IAAI,sBAAsB,GAAG,kCAAkC;IAG/D,MAAM,SAAS,EAAE;IAGjB,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,MAAM,EAAE,IAAK;QACzC,MAAM,UAAU,SAAS,CAAC,EAAE;QAE5B,MAAM,WAAW;QACjB,MAAM,iBAAiB,OAAO,QAAQ,SAAS,EAAE,4CAA4C;QAG7F,iBAAiB;QACjB,uBAAuB;QAEvB,0EAA0E;QAC1E,QAAQ,QAAQ,SAAS;QAEzB,8CAA8C;QAC9C,OAAO,IAAI,CAAC;YACV,GAAG,OAAO;YACV,UAAU;YACV,gBAAgB;QAClB;IACF;IAEA,8DAA8D;IAC9D,MAAM,cAAc,gBAAgB,UAAU,MAAM;IACpD,MAAM,oBAAoB,sBAAsB,UAAU,MAAM;IAEhE,sEAAsE;IACtE,OAAO;QACL;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 506, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 512, "column": 0}, "map": {"version":3,"sources":["file:///Users/austincho/cpu-scheduler/algorithms/sjf.js"],"sourcesContent":["// algorithms/sjf.js\n\nexport function sjf(processes) {\n    // Sort processes by burst time \n    processes.sort((a, b) => a.burstTime - b.burstTime);\n  \n    let time = 0; //  current time to 0\n    let totalWaitTime = 0; // Iwait time to 0\n    let totalTurnAroundTime = 0; // turnaround time to 0\n  \n    // Calculate wait time and turnaround time \n    const result = processes.map((process) => {\n      const wait = time; // \n      const turnAround = time + process.burstTime; \n  \n    \n      totalWaitTime += wait;\n      totalTurnAroundTime += turnAround;\n  \n      time += process.burstTime;\n  \n      // Return the process with its wait time and turnaround time\n      return {\n        ...process,\n        waitTime: wait, \n        turnAroundTime: turnAround, \n      };\n    });\n  \n    // Calculate average wait time and turnaround time\n    const avgWaitTime = totalWaitTime / processes.length;\n    const avgTurnAroundTime = totalTurnAroundTime / processes.length;\n  \n    // Step 4: Return the results\n    return {\n      result, \n      avgWaitTime, \n      avgTurnAroundTime, \n    };\n  }"],"names":[],"mappings":"AAAA,oBAAoB;;;;AAEb,SAAS,IAAI,SAAS;IACzB,gCAAgC;IAChC,UAAU,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,SAAS,GAAG,EAAE,SAAS;IAElD,IAAI,OAAO,GAAG,qBAAqB;IACnC,IAAI,gBAAgB,GAAG,kBAAkB;IACzC,IAAI,sBAAsB,GAAG,uBAAuB;IAEpD,2CAA2C;IAC3C,MAAM,SAAS,UAAU,GAAG,CAAC,CAAC;QAC5B,MAAM,OAAO,MAAM,GAAG;QACtB,MAAM,aAAa,OAAO,QAAQ,SAAS;QAG3C,iBAAiB;QACjB,uBAAuB;QAEvB,QAAQ,QAAQ,SAAS;QAEzB,4DAA4D;QAC5D,OAAO;YACL,GAAG,OAAO;YACV,UAAU;YACV,gBAAgB;QAClB;IACF;IAEA,kDAAkD;IAClD,MAAM,cAAc,gBAAgB,UAAU,MAAM;IACpD,MAAM,oBAAoB,sBAAsB,UAAU,MAAM;IAEhE,6BAA6B;IAC7B,OAAO;QACL;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 549, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 555, "column": 0}, "map": {"version":3,"sources":["file:///Users/austincho/cpu-scheduler/algorithms/stcf.js"],"sourcesContent":["export function stcf(processes) {\n    let time = 0;\n    let completed = 0;\n    let remainingProcesses = processes.map(p => ({ ...p, remainingTime: p.burstTime }));\n    let result = [];\n  \n    while (completed < processes.length) {\n      let shortestProcess = remainingProcesses\n        .filter(p => p.arrivalTime <= time && p.remainingTime > 0)\n        .sort((a, b) => a.remainingTime - b.remainingTime)[0];\n  \n      if (shortestProcess) {\n        shortestProcess.remainingTime--;\n        result.push({ process: shortestProcess.id, time });\n  \n        if (shortestProcess.remainingTime === 0) {\n          completed++;\n        }\n      }\n      time++;\n    }\n  \n    return result;\n  }\n  "],"names":[],"mappings":";;;AAAO,SAAS,KAAK,SAAS;IAC1B,IAAI,OAAO;IACX,IAAI,YAAY;IAChB,IAAI,qBAAqB,UAAU,GAAG,CAAC,CAAA,IAAK,CAAC;YAAE,GAAG,CAAC;YAAE,eAAe,EAAE,SAAS;QAAC,CAAC;IACjF,IAAI,SAAS,EAAE;IAEf,MAAO,YAAY,UAAU,MAAM,CAAE;QACnC,IAAI,kBAAkB,mBACnB,MAAM,CAAC,CAAA,IAAK,EAAE,WAAW,IAAI,QAAQ,EAAE,aAAa,GAAG,GACvD,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,aAAa,GAAG,EAAE,aAAa,CAAC,CAAC,EAAE;QAEvD,IAAI,iBAAiB;YACnB,gBAAgB,aAAa;YAC7B,OAAO,IAAI,CAAC;gBAAE,SAAS,gBAAgB,EAAE;gBAAE;YAAK;YAEhD,IAAI,gBAAgB,aAAa,KAAK,GAAG;gBACvC;YACF;QACF;QACA;IACF;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 585, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 591, "column": 0}, "map": {"version":3,"sources":["file:///Users/austincho/cpu-scheduler/algorithms/rr.js"],"sourcesContent":["// round robin algo\n\nexport function rr(processes, timeQuantum) {\n    let time = 0;\n    let totalWaitTime = 0;\n    let totalTurnAroundTime = 0;\n    const result = [];\n  \n    // Create a copy of processes to avoid mutating the original array\n    const queue = processes.map((process) => ({\n      ...process,\n      remainingTime: process.burstTime, \n    }));\n  \n    while (queue.length > 0) {\n      const process = queue.shift(); \n  \n      const executionTime = Math.min(timeQuantum, process.remainingTime);\n      process.remainingTime -= executionTime;\n  \n      queue.forEach((p) => {\n        if (p !== process) {\n          p.waitTime = (p.waitTime || 0) + executionTime;\n        }\n      });\n  \n      if (process.remainingTime > 0) {\n        queue.push(process);\n      } else {\n\n        const turnAroundTime = time + executionTime;\n        totalWaitTime += process.waitTime || 0;\n        totalTurnAroundTime += turnAroundTime;\n  \n        result.push({\n          ...process,\n          waitTime: process.waitTime || 0,\n          turnAroundTime: turnAroundTime,\n        });\n      }\n  \n      time += executionTime;\n    }\n  \n\n    const avgWaitTime = totalWaitTime / processes.length;\n    const avgTurnAroundTime = totalTurnAroundTime / processes.length;\n  \n    return {\n      result,\n      avgWaitTime,\n      avgTurnAroundTime,\n    };\n  }"],"names":[],"mappings":"AAAA,mBAAmB;;;;AAEZ,SAAS,GAAG,SAAS,EAAE,WAAW;IACrC,IAAI,OAAO;IACX,IAAI,gBAAgB;IACpB,IAAI,sBAAsB;IAC1B,MAAM,SAAS,EAAE;IAEjB,kEAAkE;IAClE,MAAM,QAAQ,UAAU,GAAG,CAAC,CAAC,UAAY,CAAC;YACxC,GAAG,OAAO;YACV,eAAe,QAAQ,SAAS;QAClC,CAAC;IAED,MAAO,MAAM,MAAM,GAAG,EAAG;QACvB,MAAM,UAAU,MAAM,KAAK;QAE3B,MAAM,gBAAgB,KAAK,GAAG,CAAC,aAAa,QAAQ,aAAa;QACjE,QAAQ,aAAa,IAAI;QAEzB,MAAM,OAAO,CAAC,CAAC;YACb,IAAI,MAAM,SAAS;gBACjB,EAAE,QAAQ,GAAG,CAAC,EAAE,QAAQ,IAAI,CAAC,IAAI;YACnC;QACF;QAEA,IAAI,QAAQ,aAAa,GAAG,GAAG;YAC7B,MAAM,IAAI,CAAC;QACb,OAAO;YAEL,MAAM,iBAAiB,OAAO;YAC9B,iBAAiB,QAAQ,QAAQ,IAAI;YACrC,uBAAuB;YAEvB,OAAO,IAAI,CAAC;gBACV,GAAG,OAAO;gBACV,UAAU,QAAQ,QAAQ,IAAI;gBAC9B,gBAAgB;YAClB;QACF;QAEA,QAAQ;IACV;IAGA,MAAM,cAAc,gBAAgB,UAAU,MAAM;IACpD,MAAM,oBAAoB,sBAAsB,UAAU,MAAM;IAEhE,OAAO;QACL;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 639, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 645, "column": 0}, "map": {"version":3,"sources":["file:///Users/austincho/cpu-scheduler/algorithms/mlfq.js"],"sourcesContent":["// mlfq algo\n\nexport function mlfq(processes, queues = 3, timeQuanta = [4, 8, Infinity]) {\n    let time = 0;\n    let totalWaitTime = 0;\n    let totalTurnAroundTime = 0;\n    const result = [];\n  \n    // Create queues with different time quanta\n    const queuesArray = Array.from({ length: queues }, (_, i) => ({\n      timeQuantum: timeQuanta[i],\n      processes: [],\n    }));\n  \n    // Add all processes to the first queue initially\n    queuesArray[0].processes = processes.map((process) => ({\n      ...process,\n      remainingTime: process.burstTime,\n      queueLevel: 0,\n    }));\n  \n    while (queuesArray.some((q) => q.processes.length > 0)) {\n      for (let i = 0; i < queuesArray.length; i++) {\n        const queue = queuesArray[i];\n        if (queue.processes.length > 0) {\n          const process = queue.processes.shift(); \n  \n          const executionTime = Math.min(queue.timeQuantum, process.remainingTime);\n          process.remainingTime -= executionTime;\n  \n          queuesArray.forEach((q) => {\n            q.processes.forEach((p) => {\n              if (p !== process) {\n                p.waitTime = (p.waitTime || 0) + executionTime;\n              }\n            });\n          });\n  \n          if (process.remainingTime > 0 && i < queuesArray.length - 1) {\n            process.queueLevel += 1;\n            queuesArray[i + 1].processes.push(process);\n          } else if (process.remainingTime === 0) {\n\n            const turnAroundTime = time + executionTime;\n            totalWaitTime += process.waitTime || 0;\n            totalTurnAroundTime += turnAroundTime;\n  \n            result.push({\n              ...process,\n              waitTime: process.waitTime || 0,\n              turnAroundTime: turnAroundTime,\n            });\n          }\n  \n          time += executionTime;\n          break; \n        }\n      }\n    }\n  \n  \n    const avgWaitTime = totalWaitTime / processes.length;\n    const avgTurnAroundTime = totalTurnAroundTime / processes.length;\n  \n    return {\n      result,\n      avgWaitTime,\n      avgTurnAroundTime,\n    };\n  }"],"names":[],"mappings":"AAAA,YAAY;;;;AAEL,SAAS,KAAK,SAAS,EAAE,SAAS,CAAC,EAAE,aAAa;IAAC;IAAG;IAAG;CAAS;IACrE,IAAI,OAAO;IACX,IAAI,gBAAgB;IACpB,IAAI,sBAAsB;IAC1B,MAAM,SAAS,EAAE;IAEjB,2CAA2C;IAC3C,MAAM,cAAc,MAAM,IAAI,CAAC;QAAE,QAAQ;IAAO,GAAG,CAAC,GAAG,IAAM,CAAC;YAC5D,aAAa,UAAU,CAAC,EAAE;YAC1B,WAAW,EAAE;QACf,CAAC;IAED,iDAAiD;IACjD,WAAW,CAAC,EAAE,CAAC,SAAS,GAAG,UAAU,GAAG,CAAC,CAAC,UAAY,CAAC;YACrD,GAAG,OAAO;YACV,eAAe,QAAQ,SAAS;YAChC,YAAY;QACd,CAAC;IAED,MAAO,YAAY,IAAI,CAAC,CAAC,IAAM,EAAE,SAAS,CAAC,MAAM,GAAG,GAAI;QACtD,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,MAAM,EAAE,IAAK;YAC3C,MAAM,QAAQ,WAAW,CAAC,EAAE;YAC5B,IAAI,MAAM,SAAS,CAAC,MAAM,GAAG,GAAG;gBAC9B,MAAM,UAAU,MAAM,SAAS,CAAC,KAAK;gBAErC,MAAM,gBAAgB,KAAK,GAAG,CAAC,MAAM,WAAW,EAAE,QAAQ,aAAa;gBACvE,QAAQ,aAAa,IAAI;gBAEzB,YAAY,OAAO,CAAC,CAAC;oBACnB,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;wBACnB,IAAI,MAAM,SAAS;4BACjB,EAAE,QAAQ,GAAG,CAAC,EAAE,QAAQ,IAAI,CAAC,IAAI;wBACnC;oBACF;gBACF;gBAEA,IAAI,QAAQ,aAAa,GAAG,KAAK,IAAI,YAAY,MAAM,GAAG,GAAG;oBAC3D,QAAQ,UAAU,IAAI;oBACtB,WAAW,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC;gBACpC,OAAO,IAAI,QAAQ,aAAa,KAAK,GAAG;oBAEtC,MAAM,iBAAiB,OAAO;oBAC9B,iBAAiB,QAAQ,QAAQ,IAAI;oBACrC,uBAAuB;oBAEvB,OAAO,IAAI,CAAC;wBACV,GAAG,OAAO;wBACV,UAAU,QAAQ,QAAQ,IAAI;wBAC9B,gBAAgB;oBAClB;gBACF;gBAEA,QAAQ;gBACR;YACF;QACF;IACF;IAGA,MAAM,cAAc,gBAAgB,UAAU,MAAM;IACpD,MAAM,oBAAoB,sBAAsB,UAAU,MAAM;IAEhE,OAAO;QACL;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 714, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 720, "column": 0}, "map": {"version":3,"sources":["file:///Users/austincho/cpu-scheduler/components/Chart.js"],"sourcesContent":["// components/Chart.js\nimport { useEffect, useRef } from 'react';\nimport { Chart } from 'chart.js/auto';\n\nconst ChartComponent = ({ data }) => {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    if (chartRef.current) {\n      new Chart(chartRef.current, {\n        type: 'bar',\n        data: {\n          labels: data.labels,\n          datasets: [\n            {\n              label: 'Burst Time',\n              data: data.burstTimes,\n              backgroundColor: 'rgba(89, 134, 134, 0.2)',\n              borderColor: 'rgba(75, 192, 192, 1)',\n              borderWidth: 1\n            },\n            {\n              label: 'Wait Time',\n              data: data.waitTimes,\n              backgroundColor: 'rgba(153, 102, 255, 0.2)',\n              borderColor: 'rgba(153, 102, 255, 1)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  }, [data]);\n\n  return <canvas ref={chartRef} />;\n};\n\nexport default ChartComponent;\n"],"names":[],"mappings":"AAAA,sBAAsB;;;;;AACtB;AACA;AAAA;;;;;AAEA,MAAM,iBAAiB,CAAC,EAAE,IAAI,EAAE;;IAC9B,MAAM,WAAW,CAAA,GAAA,0HAAA,CAAA,SAAM,AAAD,EAAE;IAExB,CAAA,GAAA,0HAAA,CAAA,YAAS,AAAD;oCAAE;YACR,IAAI,SAAS,OAAO,EAAE;gBACpB,IAAI,wJAAA,CAAA,QAAK,CAAC,SAAS,OAAO,EAAE;oBAC1B,MAAM;oBACN,MAAM;wBACJ,QAAQ,KAAK,MAAM;wBACnB,UAAU;4BACR;gCACE,OAAO;gCACP,MAAM,KAAK,UAAU;gCACrB,iBAAiB;gCACjB,aAAa;gCACb,aAAa;4BACf;4BACA;gCACE,OAAO;gCACP,MAAM,KAAK,SAAS;gCACpB,iBAAiB;gCACjB,aAAa;gCACb,aAAa;4BACf;yBACD;oBACH;oBACA,SAAS;wBACP,QAAQ;4BACN,GAAG;gCACD,aAAa;4BACf;wBACF;oBACF;gBACF;YACF;QACF;mCAAG;QAAC;KAAK;IAET,qBAAO,0JAAC;QAAO,KAAK;;;;;;AACtB;GAtCM;KAAA;uCAwCS","debugId":null}},
    {"offset": {"line": 788, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 794, "column": 0}, "map": {"version":3,"sources":["file:///Users/austincho/cpu-scheduler/components/Header.js"],"sourcesContent":["export default function Header() {\n    return (\n      <header style={{ background: \"#007BFF\", padding: \"10px\", color: \"white\", textAlign: \"center\" }}>\n        <h1>CPU Scheduling Simulator</h1>\n      </header>\n    );\n  }\n  "],"names":[],"mappings":";;;;;AAAe,SAAS;IACpB,qBACE,0JAAC;QAAO,OAAO;YAAE,YAAY;YAAW,SAAS;YAAQ,OAAO;YAAS,WAAW;QAAS;kBAC3F,cAAA,0JAAC;sBAAG;;;;;;;;;;;AAGV;KANsB","debugId":null}},
    {"offset": {"line": 826, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 832, "column": 0}, "map": {"version":3,"sources":["file:///Users/austincho/cpu-scheduler/pages/index.js"],"sourcesContent":["import { useState } from 'react';\nimport { fifo } from '../algorithms/fifo';\nimport { sjf } from '../algorithms/sjf';\nimport { stcf } from '../algorithms/stcf';\nimport { rr } from '../algorithms/rr'; // Import Round Robin\nimport { mlfq } from '../algorithms/mlfq'; // Import MLFQ\nimport ChartComponent from '../components/Chart';\nimport Header from '../components/Header';\n\nexport default function Home() {\n  const [numProcesses, setNumProcesses] = useState(3);\n  const [timeQuantum, setTimeQuantum] = useState(2); // Add time quantum for RR\n  const [processes, setProcesses] = useState([]);\n  const [algorithm, setAlgorithm] = useState('');\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Generate random processes\n  const generateProcesses = () => {\n    const generatedProcesses = [];\n    for (let i = 0; i < numProcesses; i++) {\n      generatedProcesses.push({\n        id: i + 1,\n        burstTime: Math.floor(Math.random() * 10) + 1,\n        arrivalTime: Math.floor(Math.random() * 10),\n      });\n    }\n    setProcesses(generatedProcesses);\n  };\n\n  // Handle algorithm selection\n  const handleAlgorithmChange = (e) => {\n    setAlgorithm(e.target.value);\n  };\n\n  // Handle running the selected algorithm\n  const handleRunAlgorithm = () => {\n    if (!algorithm || processes.length === 0) return;\n\n    setLoading(true);\n\n    setTimeout(() => {\n      let algoResult = null;\n\n      switch (algorithm) {\n        case 'FIFO':\n          algoResult = fifo(processes);\n          break;\n        case 'SJF':\n          algoResult = sjf(processes);\n          break;\n        case 'STCF':\n          algoResult = stcf(processes);\n          break;\n        case 'RR':\n          algoResult = rr(processes, timeQuantum); // Pass time quantum to RR\n          break;\n        case 'MLFQ':\n          algoResult = mlfq(processes); // Run MLFQ\n          break;\n        default:\n          break;\n      }\n\n      setResult(algoResult);\n      setLoading(false);\n    }, 1000); // Simulate processing delay\n  };\n\n  return (\n    <div>\n      <Header />\n      <h1>CPU Scheduling Algorithms</h1>\n\n      {/* Input for number of processes */}\n      <label>Number of Processes: </label>\n      <input\n        type=\"number\"\n        value={numProcesses}\n        onChange={(e) => setNumProcesses(parseInt(e.target.value))}\n      />\n      <button onClick={generateProcesses}>Generate Processes</button>\n\n      {/* Input for time quantum (for RR) */}\n      {algorithm === 'RR' && (\n        <div>\n          <label>Time Quantum (for RR): </label>\n          <input\n            type=\"number\"\n            value={timeQuantum}\n            onChange={(e) => setTimeQuantum(parseInt(e.target.value))}\n          />\n        </div>\n      )}\n\n      {/* Algorithm selection dropdown */}\n      <label>Select Algorithm:</label>\n      <select value={algorithm} onChange={handleAlgorithmChange}>\n        <option value=\"\">Select Algorithm</option>\n        <option value=\"FIFO\">FIFO</option>\n        <option value=\"SJF\">SJF</option>\n        <option value=\"STCF\">STCF</option>\n        <option value=\"RR\">Round Robin (RR)</option>\n        <option value=\"MLFQ\">Multi-Level Feedback Queue (MLFQ)</option>\n      </select>\n\n      {/* Run algorithm button */}\n      <button onClick={handleRunAlgorithm} disabled={loading}>\n        {loading ? 'Running...' : 'Run Algorithm'}\n      </button>\n\n      {/* Loading message */}\n      {loading && <p>Processing... Please wait.</p>}\n\n      {/* Display results */}\n      {result && (\n        <div>\n          <h2>Results for {algorithm}</h2>\n          <p>Average Wait Time: {result.avgWaitTime.toFixed(2)}</p>\n          <p>Average Turnaround Time: {result.avgTurnAroundTime.toFixed(2)}</p>\n\n          {/* Chart for burst times */}\n          <ChartComponent\n            data={{\n              labels: result.result.map((p) => `P${p.id}`),\n              burstTimes: result.result.map((p) => p.burstTime),\n              waitTimes: result.result.map((p) => p.waitTime),\n              turnaroundTimes: result.result.map((p) => p.turnAroundTime),\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1119, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/entry/page-loader.ts"],"sourcesContent":["const PAGE_PATH = \"/\";\n\n/// <reference types=\"next/client\" />\n\n// inserted by rust code\ndeclare const PAGE_PATH: string\n\n  // Adapted from https://github.com/vercel/next.js/blob/b7f9f1f98fc8ab602e84825105b5727272b72e7d/packages/next/src/build/webpack/loaders/next-client-pages-loader.ts\n;(window.__NEXT_P = window.__NEXT_P || []).push([\n  PAGE_PATH,\n  () => {\n    return require('PAGE')\n  },\n])\n// @ts-expect-error module.hot exists\nif (module.hot) {\n  // @ts-expect-error module.hot exists\n  module.hot.dispose(function () {\n    window.__NEXT_P.push([PAGE_PATH])\n  })\n}\n"],"names":[],"mappings":"AAAA,MAAM,YAAY;AAQjB,CAAC,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC;IAC9C;IACA;QACE;IACF;CACD;AACD,qCAAqC;AACrC,IAAI,OAAO,GAAG,EAAE;IACd,qCAAqC;IACrC,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;YAAC;SAAU;IAClC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}